{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":56537,"databundleVersionId":8015876,"sourceType":"competition"}],"dockerImageVersionId":30698,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd\nimport polars as pl # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2024-04-30T12:41:21.151790Z","iopub.execute_input":"2024-04-30T12:41:21.152432Z","iopub.status.idle":"2024-04-30T12:41:21.952930Z","shell.execute_reply.started":"2024-04-30T12:41:21.152398Z","shell.execute_reply":"2024-04-30T12:41:21.951715Z"},"trusted":true},"execution_count":2,"outputs":[{"name":"stdout","text":"/kaggle/input/leap-atmospheric-physics-ai-climsim/sample_submission.csv\n/kaggle/input/leap-atmospheric-physics-ai-climsim/train.csv\n/kaggle/input/leap-atmospheric-physics-ai-climsim/test.csv\n","output_type":"stream"}]},{"cell_type":"code","source":"train_csv = '/kaggle/input/leap-atmospheric-physics-ai-climsim/train.csv'\ntest_csv = '/kaggle/input/leap-atmospheric-physics-ai-climsim/test.csv'\n\nread_chunk_size = 50000","metadata":{"execution":{"iopub.status.busy":"2024-04-30T12:41:21.955250Z","iopub.execute_input":"2024-04-30T12:41:21.956898Z","iopub.status.idle":"2024-04-30T12:41:21.964092Z","shell.execute_reply.started":"2024-04-30T12:41:21.956840Z","shell.execute_reply":"2024-04-30T12:41:21.962625Z"},"trusted":true},"execution_count":3,"outputs":[]},{"cell_type":"code","source":"train_chunks = pd.read_csv(train_csv, chunksize = read_chunk_size)\ntrain_set = next(train_chunks)","metadata":{"execution":{"iopub.status.busy":"2024-04-30T12:41:21.965983Z","iopub.execute_input":"2024-04-30T12:41:21.966399Z","iopub.status.idle":"2024-04-30T12:41:53.834319Z","shell.execute_reply.started":"2024-04-30T12:41:21.966364Z","shell.execute_reply":"2024-04-30T12:41:53.833357Z"},"trusted":true},"execution_count":4,"outputs":[]},{"cell_type":"code","source":"train_set.shape","metadata":{"execution":{"iopub.status.busy":"2024-04-30T12:42:05.275659Z","iopub.execute_input":"2024-04-30T12:42:05.276073Z","iopub.status.idle":"2024-04-30T12:42:05.286260Z","shell.execute_reply.started":"2024-04-30T12:42:05.276042Z","shell.execute_reply":"2024-04-30T12:42:05.284486Z"},"trusted":true},"execution_count":6,"outputs":[{"execution_count":6,"output_type":"execute_result","data":{"text/plain":"(50000, 925)"},"metadata":{}}]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]}]}